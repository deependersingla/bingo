<html>
<head>
<% ip = Ip.where(ip: request.remote_ip).last %>

<script type="text/javascript">
function callPieWin() {
var chart = AmCharts.makeChart("chartdiv", {
    "type": "pie",
  "theme": "light",
  "colors": ["#0D8ECF","#8A0CCF",  "#2A0CD0"],
    "dataProvider": [
{
        "country": "Computer",
        "litres": <%=ip.computer_win %>
    },
{
        "country": "Human",
        "litres": <%=ip.human_win %>
    }, {
        "country": "Tie",
        "litres": <%=ip.tie %>
    }],
    "valueField": "litres",
    "titleField": "country"
});
}

</script>


<script type="text/javascript">
{
 function callpie() {
    var chart = new CanvasJS.Chart("chartContainer",
    {
      title:{
        text: "Let's see if you can Beat Bingo's ass."
      },
      legend:{
        verticalAlign: "center",
        horizontalAlign: "left",
        fontSize: 20,
        fontFamily: "Helvetica"        
      },
      theme: "theme2",
      data: [
      {        
       type: "pie",       
       indexLabelFontFamily: "Garamond",       
       indexLabelFontSize: 14,
       indexLabelFontColor: "black", 
       indexLabelPlacement: "inside",
       startAngle:-20,      
       showInLegend: false,
       toolTipContent:false,
       dataPoints: [
       {  y: <%=ip.computer_win * 100/ (ip.computer_win + ip.human_win + ip.tie) %>, indexLabel: "Computer"},
       {  y: <%=ip.human_win* 100/ (ip.computer_win + ip.human_win + ip.tie) %>, indexLabel: "Human" },
       {  y: <%=ip.tie* 100/ (ip.computer_win + ip.human_win + ip.tie) %>, indexLabel: "Tie" },
       
       ]
     }
     ]
   });

    chart.render();
  }
}
  </script>
  <script src="http://code.jquery.com/jquery-1.11.0.min.js"></script>
      <style type="text/css">
#portfolios {
    margin-left:auto; 
    margin-right:auto;
  }
.column-left{ float: left; width: 33%; }
.column-right{ float: right; width: 33%; }
.column-center{ display: inline-block; width: 33%; }
#chartdiv {
  width   : 100%;
  font-size : 11px;
}  

  .btn-custom {
  background-color: hsl(195, 60%, 35%) !important;
  background-repeat: repeat-x;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr="#2d95b7", endColorstr="#23748e");
  background-image: -khtml-gradient(linear, left top, left bottom, from(#2d95b7), to(#23748e));
  background-image: -moz-linear-gradient(top, #2d95b7, #23748e);
  background-image: -ms-linear-gradient(top, #2d95b7, #23748e);
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #2d95b7), color-stop(100%, #23748e));
  background-image: -webkit-linear-gradient(top, #2d95b7, #23748e);
  background-image: -o-linear-gradient(top, #2d95b7, #23748e);
  background-image: linear-gradient(#2d95b7, #23748e);
  border-color: #23748e #23748e hsl(195, 60%, 32.5%);
  color: #fff !important;
  text-shadow: 0 -1px 0 
  rgba(0, 0, 0, 0.16);
  -webkit-font-smoothing: antialiased;
}
th:hover {
background-color:yellow;
}
</style>

</head>

  <body style="color:white;">
    
 <br>
   
<% d = ComputerPlay.new(@matrix) %>
<%cut_line = d.total_cut_lines %>
<% # change this to 7 * 7  or 9 * 9%>


<% game = Game.where(ip_id: Ip.where(ip: request.remote_ip).last).last %>
<% comp_matrix = game.opponent_matrix %>
<% comp = ComputerPlay.new(comp_matrix) %>
<% cut_lines = comp.total_cut_lines %>
<% ip = Ip.where(ip: request.remote_ip).last %>


<% if cut_line < game.level && cut_lines < game.level %>
<div class="column-left">
  <br><br><br><br>
  <h2><center>Score</center></h2>
 <% d = ['B','I','N','G','O', 'B','I','N','G','O', 'B','I','N','G','O'] %>
<% (0..cut_line - 1).each {|i| d[i] = "X"} %>
<h4><center>Your Score: <%= d[0..(game.level-1)] %></center></h4>

<% d = ['B','I','N','G','O', 'B','I','N','G','O', 'B','I','N','G','O'] %>
<% (0..cut_lines - 1).each {|i| d[i] = "X"} %>
<h4><center>Computer:&nbsp; <%= d[0..(game.level-1)] %></center></h4>
  <br>
 
   


</div>
<div class="column-center">
<h1><center>BINGO!</center></h1>
<br>
<% @matrix %>

<table id="portfolios" style="float:center;width:30%; " border="3" class="table" >



	<% @matrix.each do |z| %>
	<tr>
		<% z.each do |x| %>
		<th id="<%= 'cell'+x.to_s %>" style="color:10px;" >
			<% if x == 0 %>
			<% x = "X" %>
			<% end %>
		<% if x == "X" %>
		<h3 style="color:red;">	<%= x%> </h3>
		<% else %>
		<h3 >	<%= x%> </h3>
		<% end %>
		</th>
		<% end %>
	</tr>
	<% end %>
</table>

<br>

<form action="/game/restart_level" align="center">
<button class="sample btn custom large m" data-h="195" data-s="60" data-l="40", data-p="5" onclick="stopWatch()">Restart</button>


</form>
</div>

<div class="column-right" style="position: relative; z-index:-3;"> 
   <br><br><br><br>
  <br>
 <div id="chartContainer" style="height: 300px; width: 100%; ">
    </div>
<script type="text/javascript">
{
  window.onload= callpie();
}
  </script>
  <script type="text/javascript" src="/assets/script/canvasjs.min.js"></script>
  <br><center>
 <h5>Number of Computer wins: <%=ip.computer_win %>
 
<h5>Number of Human wins: <%=ip.human_win %>
<h5>Number of Ties: <%=ip.tie %>
  </center>
</div>
<% elsif (cut_line >= game.level) && (cut_lines <game.level) %>
<% level = game.level + 2 %>
<% Game.new.game_initialization(ip, level) %>
<% ip.human_win += 1%>

<h1><center>YOU WIN</h1></center>
<div id="chartdiv" style="height: 400px; width: 100%;"></div>
    <center> <h5>Number of Computer wins: <%=ip.computer_win %>
 <h5>Number of Human wins: <%=ip.human_win %>
<h5>Number of Ties: <%=ip.tie %>
    </center>
<script type="text/javascript">window.onload=callPieWin();</script>
<form action="/game/play" align="center">
<button class="sample btn custom large m" data-h="195" data-s="60" data-l="40", data-p="5">Next Level</button>
</form>
<% elsif (cut_line >= game.level) && (cut_lines >=game.level) %>
<h1><center>TIE</h1></center>
<% ip.tie +=1 %>
<div id="chartdiv" style="height: 400px; width: 100%;">

    </div>
    <center> <h5>Number of Computer wins: <%=ip.computer_win %>
 <h5>Number of Human wins: <%=ip.human_win %>
<h5>Number of Ties: <%=ip.tie %>
    </center>
<script type="text/javascript">window.onload=callPieWin();</script>
<% level = game.level %>
<% Game.new.game_initialization(ip, level) %>


<form action="/game/play" align="center">
<button class="sample btn custom large m" data-h="195" data-s="60" data-l="40", data-p="5">Restart Level</button>
</form>

<% else %>
<h1><center>COMPUTER WINS</h1></center>
<% ip.computer_win += 1 %>
<div id="chartdiv" style="height: 400px; width: 100%;">

    </div>


  <br>
 
<script type="text/javascript">window.onload=callPieWin();</script>
<h5><center>Human wins: <%= ip.human_win %> </h1></center>
<h5><center>Computer wins: <%= ip.computer_win %> </h1></center>
<h5><center>Tie: <%= ip.tie %> </h1></center>

<form action="/game/start_game" align="center">
<button class="sample btn custom large m" data-h="195" data-s="60" data-l="40", data-p="5">Restart</button>
</form>
<% end %>
<% ip.save %>

</body>

<script language="javascript">

 $(document).ready(function()
{
  $("tr:even").css("background-color", "white");
});

$('tr th').click(function(){
    var cval = $(this).text();
    var cell="cell";
    var original="white";
    var duration=1200;
    var restore = "red";
  $(this).css('backgroundColor', '#00FF00').hide(4000);

    getval(cval);
});
        function getval(cel) {

        	cel = cel.replace(/(^\s+|\s+$)/g, '');
        	if(cel=='X')
        		{
        			window.alert("Oops! Click again.");

        		}
        		else {
              c="<% cut_line %>";
              

              post_to_url("/game/search", {q: cel});
        			
        		}
        }

		var post_to_url =  function (path, params, method) {
 		method = method || "post"; // Set method to post by default if not specified.

 // The rest of this code assumes you are not using a library.
 // It can be made less wordy if you use one.
 		var form = document.createElement("form");
 		form.setAttribute("method", method);
 		form.setAttribute("action", path);

 		for(var key in params) {
   		if(params.hasOwnProperty(key)) {
     		var hiddenField = document.createElement("input");
     		hiddenField.setAttribute("type", "hidden");
     		hiddenField.setAttribute("name", key);
     		hiddenField.setAttribute("value", params[key]);
 
     		form.appendChild(hiddenField);
        	}
  		}

   		document.body.appendChild(form);
   		form.submit();
		}

    </script>
